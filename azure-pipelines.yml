# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  VMS_PASS: $(acr-pass)

trigger:
- master

pool:
  name: 'Default'
  vmImage: ubuntu-latest

jobs:
- job: build
  displayName: 'Build the application'
  steps:
  - task: Npm@1
    inputs:
      command: 'install'
      verbose: true
      customRegistry: 'useFeed'
      customFeed: 'bb88b96b-2ebe-4be6-b48e-6844d88d4884/7b0bfe4f-ea88-4985-a177-9f69b009491d'
  - task: Docker@2
    inputs:
      containerRegistry: 'acrconn'
      repository: 'app/aegis'
      command: 'buildAndPush'
      Dockerfile: 'Dockerfile'
      tags: '$(Build.BuildNumber)'
  
  - task: Npm@1
    displayName: 'Publish dependencies to feed'
    inputs:
      command: 'publish'
      verbose: true
      publishRegistry: 'useFeed'
      publishFeed: 'bb88b96b-2ebe-4be6-b48e-6844d88d4884/7b0bfe4f-ea88-4985-a177-9f69b009491d'

- job: Deploy
  displayName: 'Deployment to App Service'
  dependsOn: 'build'
  condition: succeeded('build')
  steps:
  - task: AzureWebAppContainer@1
    inputs:
      azureSubscription: 'rgconn'
      appName: 'mytestappsvc'
      containers: 'mytesdockregistry.azurecr.io/app/aegis:$(Build.BuildNumber)'
      appSettings: '-DOCKER_REGISTRY_SERVER_PASSWORD $(VMS_PASS) -DOCKER_REGISTRY_SERVER_URL https://mytesdockregistry.azurecr.io -DOCKER_REGISTRY_SERVER_USERNAME mytesdockregistry'
